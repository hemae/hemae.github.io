{"version":3,"sources":["components/popUp/TaxDeduction/Button/Button.module.css","components/popUp/TaxDeduction/TaxDeduction.module.css","components/popUp/TaxDeduction/Input/Input.module.css","components/popUp/TaxDeduction/Checkbox/Checkbox.module.css","components/popUp/PopUp/PopUp.module.css","components/popUp/TaxDeduction/CheckboxBlock.module.css","App.module.css","components/popUp/PopUp/PopUpBackground.module.css","components/popUp/TaxDeduction/CloseButton/CloseButton.module.css","components/popUp/TaxDeduction/Button/Button.tsx","components/popUp/PopUp/PopUpBackground.tsx","components/popUp/TaxDeduction/CloseButton/assets/closeButton.svg","components/popUp/TaxDeduction/CloseButton/CloseButton.tsx","components/popUp/TaxDeduction/Input/Input.tsx","components/popUp/TaxDeduction/Checkbox/assets/check.svg","components/popUp/TaxDeduction/Checkbox/Checkbox.tsx","helpers/taxCalculator.ts","helpers/language.ts","helpers/slararyInputValidators.ts","components/popUp/TaxDeduction/TaxDeduction.tsx","components/popUp/PopUp/PopUp.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["module","exports","Button","props","type","label","handler","disabled","border","notActive","className","styles","button","text","small","tag","onClick","memo","background","CloseButton","closeButton","src","alt","Input","unitPrefix","value","setValue","placeholder","errors","unsetErrors","onEnterPress","unit","autoFocus","isError","forEach","error","input","inputWrapper","onChange","event","target","onFocus","onKeyPress","prefix","map","index","Checkbox","checkboxContainer","checkbox","checked","check","checkboxLabel","calculateDeduction","salary","residue","amountByYear","yearNumber","amount","Math","round","push","endsByNumber","numericallyEnd","num","abs","rublesEndsByNumber","validateExist","trim","validateType","isNaN","CheckboxBlock","isLast","checkboxBlockStyles","checkboxBlock","noBorder","TaxDeduction","closePopUp","useState","setSalary","salaryTypeError","setSalaryTypeError","salaryEmptyError","setSalaryEmptyError","salaryMinError","setSalaryMinError","years","setYears","setChecked","choseAll","setChoseAll","useEffect","length","reduce","init","isPayTagActive","setIsPayTagActive","_","i","calculateHandler","min","validateMin","_years","el","taxDeduction","closeBtn","key","fullScreenWidth","checkboxBlocksHeader","checkboxBlocksContainer","year","prev","tagContainer","addButtonContainer","addButtonContainer_checkboxBlock_empty","PopUp","renderingJSX","popUpOptions","localIsShown","setLocalIsShown","isOnContentOver","setIsOnContentOver","renderingComponent","PopUpBackground","popUp","active","onMouseDown","onMouseOver","onMouseLeave","App","setPopUpOptions","app","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8e0607d7.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Button_button__38M1N\",\"border\":\"Button_border__16Hpu\",\"disabled\":\"Button_disabled__pPsYU\",\"text\":\"Button_text__2ge-k\",\"small\":\"Button_small__3pCJY\",\"tag\":\"Button_tag__3OLsN\",\"notActive\":\"Button_notActive__1TYYH\",\"fullScreenWidth\":\"Button_fullScreenWidth__3iCwO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"taxDeduction\":\"TaxDeduction_taxDeduction__3FWHF\",\"closeBtn\":\"TaxDeduction_closeBtn__3ytQQ\",\"checkboxBlocksContainer\":\"TaxDeduction_checkboxBlocksContainer__3wgQq\",\"checkboxBlocksHeader\":\"TaxDeduction_checkboxBlocksHeader__Ky3-9\",\"tagContainer\":\"TaxDeduction_tagContainer__3r6E4\",\"addButtonContainer\":\"TaxDeduction_addButtonContainer__3YfhF\",\"addButtonContainer_checkboxBlock_empty\":\"TaxDeduction_addButtonContainer_checkboxBlock_empty__3Gu2S\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"Input_input__2lSPw\",\"inputWrapper\":\"Input_inputWrapper__28XQP\",\"prefix\":\"Input_prefix__3eLHn\",\"label\":\"Input_label__3UzSK\",\"error\":\"Input_error__Oyo4y\",\"errors\":\"Input_errors__2KlpP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkboxContainer\":\"Checkbox_checkboxContainer__3z9uL\",\"checkbox\":\"Checkbox_checkbox__2Vmbo\",\"disabled\":\"Checkbox_disabled__3QBp9\",\"checked\":\"Checkbox_checked__3sZx8\",\"checkboxLabel\":\"Checkbox_checkboxLabel__wEaWc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"popUp\":\"PopUp_popUp__2il-V\",\"active\":\"PopUp_active__1QSSq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkboxBlock\":\"CheckboxBlock_checkboxBlock__3JaoJ\",\"noBorder\":\"CheckboxBlock_noBorder__DwV9W\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"App_app__1kX79\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"background\":\"PopUpBackground_background__39smd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"closeButton\":\"CloseButton_closeButton__eO_uY\"};","import React, {FC, memo} from 'react'\nimport styles from './Button.module.css'\n\n\ntype ButtonType = 'text' | 'big' | 'small' | 'tag'\n\ntype ButtonPropsType = {\n    type?: ButtonType\n    label: string\n    handler: () => void\n    disabled?: boolean\n    border?: boolean\n    notActive?: boolean\n    fullScreenWidth?: boolean\n}\n\nconst Button: FC<ButtonPropsType> = (props) => {\n\n    const {\n        type = 'big',\n        label,\n        handler,\n        disabled = false,\n        border = false,\n        notActive\n    } = props\n\n    const onButtonClick = (): void => {\n        if (!disabled) {\n            handler()\n        }\n    }\n\n    let className = styles.button\n\n    switch (type) {\n        case 'big':\n            className = `${className} + ${border ? styles.border : ''}  + ${disabled ? styles.disabled : ''}`\n            break\n        case 'text':\n            className = `${className} + ${styles.text}`\n            break\n        case 'small':\n            className = `${className} + ${styles.small} + ${border ? styles.border : ''} + ${disabled ? styles.disabled : ''}`\n            break\n        case 'tag':\n            className = `${className} + ${styles.tag} + ${notActive ? styles.notActive : ''}`\n            break\n        default:\n            break\n    }\n\n    if (type === 'text' && disabled) {\n        return <></>\n    }\n\n    return (\n        <button\n            className={className}\n            onClick={onButtonClick}\n        >{label}</button>\n    )\n}\n\nexport default memo<ButtonPropsType>(Button)","import React from 'react'\nimport styles from './PopUpBackground.module.css'\n\nexport default () => <div className={`${styles.background}`}></div>","export default __webpack_public_path__ + \"static/media/closeButton.beb7d290.svg\";","import React, {FC, memo} from 'react'\nimport styles from './CloseButton.module.css'\nimport closeButton from './assets/closeButton.svg'\n\n\ntype CloseButtonPropsType = {\n    handler: () => void\n}\n\nconst CloseButton: FC<CloseButtonPropsType> = (props) => {\n\n    const {\n        handler\n    } = props\n\n    const onCloseButtonClick = (): void => {\n        handler()\n    }\n\n    return (\n        <div\n            className={styles.closeButton}\n            onClick={onCloseButtonClick}\n        >\n            <img src={closeButton} alt='close-button'/>\n        </div>\n    )\n}\n\nexport default memo<CloseButtonPropsType>(CloseButton)","import React, {FC, memo} from 'react'\nimport styles from './Input.module.css'\n\n\ntype InputPropsType = {\n    value: string\n    setValue: (value: string) => void\n    placeholder?: string\n    label?: string\n    errors?: string[]\n    unsetErrors?: () => void\n    onEnterPress: (event: React.KeyboardEvent) => void\n    unit?: 'ruble' | 'euro' | 'dollar' | 'pound'\n    autoFocus?: boolean\n}\n\ntype UnitPrefixType = '₽' | '€' | '$' | ''\n\nconst Input: FC<InputPropsType> = (props) => {\n\n    const {\n        value,\n        setValue,\n        placeholder,\n        label,\n        errors = [],\n        unsetErrors,\n        onEnterPress,\n        unit,\n        autoFocus = false\n    } = props\n\n    const onInputChange = (event: React.ChangeEvent<HTMLInputElement>): void => {\n        setValue(event.target.value)\n        if (unsetErrors) {\n            unsetErrors()\n        }\n    }\n\n    const onInputFocus = (): void => {\n        if (unsetErrors) {\n            unsetErrors()\n        }\n    }\n\n    let isError = false\n    errors.forEach(error => {\n        isError = isError || !!error\n    })\n\n    let unitPrefix: UnitPrefixType\n\n    switch (unit) {\n        case 'ruble':\n            unitPrefix = '₽'\n            break\n        case 'euro':\n            unitPrefix = '€'\n            break\n        case 'dollar':\n            unitPrefix = '$'\n            break\n        default:\n            unitPrefix = ''\n    }\n\n    return (\n        <div className={`${styles.input} + ${isError ? styles.error : ''}`}>\n            {label && <span className={styles.label}>{label}</span>}\n\n            <div className={styles.inputWrapper}>\n                <input\n                    type='text'\n                    value={value}\n                    onChange={onInputChange}\n                    placeholder={placeholder}\n                    onFocus={onInputFocus}\n                    onKeyPress={onEnterPress}\n                    prefix={unitPrefix}\n                    autoFocus={autoFocus}\n                />\n                {unit &&\n                <div className={styles.prefix}>{unitPrefix}</div>}\n            </div>\n            <div className={styles.errors}>\n                {errors.map((error, index) => {\n                    if (!!error) {\n                        return <span key={index}>{error}</span>\n                    }\n                })}\n            </div>\n        </div>\n    )\n}\n\nexport default memo<InputPropsType>(Input)","export default __webpack_public_path__ + \"static/media/check.62a8ceae.svg\";","import React, {FC, memo} from 'react'\nimport styles from './Checkbox.module.css'\nimport check from './assets/check.svg'\n\ntype CheckboxPropsType = {\n    value: boolean\n    setValue: (value: boolean) => void\n    label?: string\n    disabled?: boolean\n}\n\nconst Checkbox: FC<CheckboxPropsType> = (props) => {\n\n    const {\n        value,\n        setValue,\n        label,\n        disabled = false\n    } = props\n\n    const onCheckboxClick = (): void => {\n        if (!disabled) {\n            setValue(!value)\n        }\n    }\n\n    return (\n        <div className={styles.checkboxContainer}>\n            <div\n                className={`${styles.checkbox} + ${value ? styles.checked : ''} + ${disabled ? styles.disabled : ''}`}\n                onClick={onCheckboxClick}\n            >\n                {value && <img src={check} alt='check'/>}\n            </div>\n            {label && <span className={styles.checkboxLabel}>{label}</span>}\n        </div>\n    )\n}\n\nexport default memo<CheckboxPropsType>(Checkbox)","import {AmountByYearType} from '../types/TaxDeductionTypes'\n\nconst MAX_AMOUNT = 260000\n\nexport function calculateDeduction(salary: number): AmountByYearType[] {\n    let residue = MAX_AMOUNT\n    const amountByYear: AmountByYearType[] = []\n    let yearNumber = 1\n    let amount = Math.round(salary * 0.13 * 12)\n    if (salary >= 5000) {\n        while (residue - amount > 0) {\n            amountByYear.push({amount, yearNumber})\n            yearNumber += 1\n            residue -= amount\n        }\n        return [...amountByYear, {amount: residue, yearNumber}]\n    }\n    return []\n}","type EndsType = 'ой' | 'ый' | 'ий'\n\nconst endsByNumber: Array<EndsType> = ['ый', 'ый', 'ой', 'ий', 'ый', 'ый', 'ой', 'ой', 'ой', 'ый']\n\nexport function numericallyEnd(num: number): EndsType {\n    num = Math.abs(num)\n    if (num >= 11 && num <= 19) {\n        return 'ый'\n    }\n    if (num === 0) {\n        return 'ой'\n    }\n\n    return endsByNumber[num % 10]\n}\n\ntype RublesEndsType = 'ей' | 'ь' | 'я'\n\nconst rublesEndsByNumber: Array<RublesEndsType> = ['ей', 'ь', 'я', 'я', 'я', 'ей', 'ей', 'ей', 'ей', 'ей']\n\nexport function rublesEnd(num: number): RublesEndsType {\n    num = Math.abs(num)\n    if (num >= 11 && num <= 19) {\n        return 'ей'\n    }\n\n    return rublesEndsByNumber[num % 10]\n}","export function validateExist(salary: string): boolean {\n    return !!salary.trim()\n}\n\nexport function validateType(salary: string): boolean {\n    return !isNaN(+salary)\n}\n\nexport function validateMin(salary: number, min: number): boolean {\n    return salary >= min\n}\n","import React, {FC, memo, useEffect, useState} from 'react'\nimport styles from './TaxDeduction.module.css'\nimport checkboxBlockStyles from './CheckboxBlock.module.css'\nimport CloseButton from './CloseButton/CloseButton'\nimport Input from './Input/Input'\nimport Button from './Button/Button'\nimport Checkbox from './Checkbox/Checkbox'\nimport {calculateDeduction} from '../../../helpers/taxCalculator'\nimport {AmountByYearType} from '../../../types/TaxDeductionTypes'\nimport {numericallyEnd, rublesEnd} from '../../../helpers/language'\nimport {validateExist, validateMin, validateType} from '../../../helpers/slararyInputValidators'\n\n\ntype CheckboxBlockPropsType = {\n    amount: number\n    value: boolean\n    setValue: () => void\n    yearNumber: number\n    isLast: boolean\n}\n\nconst CheckboxBlock: FC<CheckboxBlockPropsType> = (props) => {\n\n    const {\n        amount,\n        value,\n        setValue,\n        yearNumber,\n        isLast\n    } = props\n\n    return (\n        <div className={`${checkboxBlockStyles.checkboxBlock} + ${isLast ? checkboxBlockStyles.noBorder : ''}`}>\n            <Checkbox\n                label={`${amount} рубл${rublesEnd(amount)}`}\n                setValue={setValue}\n                value={value}\n            />\n            <span>{yearNumber === 2 ? 'во ' : 'в '}{yearNumber}-{numericallyEnd(yearNumber)} год</span>\n        </div>\n    )\n}\n\ntype TaxDeductionPropsType = {\n    closePopUp: () => void\n}\n\n\nconst TaxDeduction: FC<TaxDeductionPropsType> = (props) => {\n\n    const {\n        closePopUp\n    } = props\n\n    const [salary, setSalary] = useState<string>('')\n    const [salaryTypeError, setSalaryTypeError] = useState<string>('')\n    const [salaryEmptyError, setSalaryEmptyError] = useState<string>('')\n    const [salaryMinError, setSalaryMinError] = useState<string>('')\n\n    const [years, setYears] = useState<AmountByYearType[]>([])\n    const [checked, setChecked] = useState<boolean[]>([])\n    const [choseAll, setChoseAll] = useState<boolean>(false)\n\n    useEffect(() => {\n        if (!!checked.length) {\n            if (checked.reduce((init, check) => init && check, true) && !choseAll) {\n                setChoseAll(true)\n            } else if (!checked.reduce((init, check) => init && check, true)) {\n                setChoseAll(false)\n            }\n        }\n    }, [checked])\n\n    const [isPayTagActive, setIsPayTagActive] = useState<boolean>(true)\n\n    const setItemChecked = (i: number): void => {\n        setChecked(prev => prev.map((check, index) => index === i ? !check : check))\n    }\n\n    useEffect(() => {\n        if (choseAll && !checked.reduce((init, check) => init && check, true)) {\n            checked.forEach((_, i) => {\n                setChecked(checked.map(_ => true))\n            })\n        }\n    }, [choseAll])\n\n    const calculateHandler = (): void => {\n        if (validateExist(salary) && validateType(salary)) {\n            if (validateMin(+salary, 5000)) {\n                const _years: AmountByYearType[] = calculateDeduction(+salary)\n                setYears(calculateDeduction(+salary))\n                setChecked(_years.map(el => false))\n            } else {\n                setSalaryMinError('Введите доход от 5000 включительно')\n            }\n        } else if (!validateExist(salary)) {\n            setSalaryEmptyError('Введите доход')\n        } else if (!validateType(salary)) {\n            setSalaryTypeError('Доход должен быть целым числом без пробелов точек и запятых')\n        }\n    }\n\n    const unsetErrors = (): void => {\n        setSalaryTypeError('')\n        setSalaryEmptyError('')\n        setSalaryMinError('')\n    }\n    const onSalaryInputEnterPress = (event: React.KeyboardEvent): void => {\n        if (event.key === 'Enter') {\n            calculateHandler()\n        }\n    }\n    const onCalculateClick = (): void => {\n        calculateHandler()\n    }\n\n    const onAddClick = (): void => {\n\n    }\n\n    const onPayClick = (): void => {\n        setIsPayTagActive(true)\n    }\n\n    const onTimeClick = (): void => {\n        setIsPayTagActive(false)\n    }\n\n    return (\n        <div className={styles.taxDeduction}>\n            <div className={styles.closeBtn}><CloseButton handler={closePopUp}/></div>\n            <h3>Налоговый вычет</h3>\n            <p>Используйте налоговый вычет чтобы погасить ипотеку досрочно. Размер налогового вычета составляет не более\n                13% от своего официального годового дохода.</p>\n            <Input\n                value={salary}\n                setValue={setSalary}\n                onEnterPress={onSalaryInputEnterPress}\n                errors={[salaryEmptyError, salaryTypeError, salaryMinError]}\n                unsetErrors={unsetErrors}\n                label={'Ваша зарплата в месяц'}\n                placeholder={'Введите доход больше 5000'}\n                unit={'ruble'}\n                autoFocus={true}\n            />\n            <Button\n                label='Рассчитать'\n                handler={onCalculateClick}\n                type='text'\n                fullScreenWidth={true}\n            />\n            <div className={styles.checkboxBlocksHeader}>\n                {!!years.length && <span>Итого можете внести в качестве досрочных:</span>}\n                {years.length >= 4 &&\n                <Checkbox\n                    label='Выбрать все'\n                    value={choseAll}\n                    setValue={setChoseAll}\n                />}\n            </div>\n            <div className={styles.checkboxBlocksContainer}>\n                {years.map((year, index) => {\n                        return (\n                            <CheckboxBlock\n                                key={index}\n                                amount={year.amount}\n                                value={checked[index]}\n                                setValue={() => setItemChecked(index)}\n                                yearNumber={year.yearNumber}\n                                isLast={index + 1 === years.length}\n                            />\n                        )\n                    }\n                )}\n            </div>\n            <div className={styles.tagContainer}>\n                <span>Что уменьшаем?</span>\n                <Button\n                    label='Платеж'\n                    handler={onPayClick}\n                    type='tag'\n                    notActive={!isPayTagActive}\n                />\n                <Button\n                    label='Срок'\n                    handler={onTimeClick}\n                    type='tag'\n                    notActive={isPayTagActive}\n                />\n            </div>\n            <div className={`${!years.length ? styles.addButtonContainer_checkboxBlock_empty : styles.addButtonContainer}`}><Button\n                label='Добавить'\n                handler={onAddClick}\n            /></div>\n        </div>\n    )\n}\n\nexport default memo<TaxDeductionPropsType>(TaxDeduction)","import React, {FC, memo, useEffect, useState} from 'react'\nimport styles from './PopUp.module.css'\nimport {PopUpStateType} from '../../../types/AppTypes'\nimport PopUpBackground from './PopUpBackground'\nimport TaxDeduction from '../TaxDeduction/TaxDeduction'\n\n\ntype PopUpPropsType = {\n    popUpOptions: PopUpStateType\n    closePopUp: () => void\n}\n\nconst PopUp: FC<PopUpPropsType> = ({popUpOptions, closePopUp}) => {\n\n    const [localIsShown, setLocalIsShown] = useState<boolean>(false)\n    const [isOnContentOver, setIsOnContentOver] = useState<boolean>(false)\n\n    useEffect(() => {\n        setLocalIsShown(true)\n    }, [])\n\n    let renderingJSX: JSX.Element\n\n    switch (popUpOptions.renderingComponent) {\n        case 'taxDeduction':\n            renderingJSX = <TaxDeduction {...popUpOptions.props}/>\n            break\n        default:\n            renderingJSX = <></>\n    }\n\n    const onPopUpBackgroundClick = (): void => {\n        if (!isOnContentOver) {\n            closePopUp()\n        }\n    }\n\n    const onContentOver = (): void => {\n        setIsOnContentOver(true)\n    }\n\n    const onContentLeave = (): void => {\n        setIsOnContentOver(false)\n    }\n\n    return (\n        <>\n\n            <PopUpBackground/>\n\n            <div\n                className={`${styles.popUp} + ${localIsShown ? styles.active : ''}`}\n                onMouseDown={onPopUpBackgroundClick}\n            >\n\n                <div\n                    onMouseOver={onContentOver}\n                    onMouseLeave={onContentLeave}\n                >{renderingJSX}</div>\n\n            </div>\n\n        </>\n\n    )\n}\n\nexport default memo<PopUpPropsType>(PopUp)","import React, {FC, useState} from 'react'\nimport styles from './App.module.css'\nimport {PopUpStateType} from './types/AppTypes'\nimport Button from './components/popUp/TaxDeduction/Button/Button'\nimport PopUp from './components/popUp/PopUp/PopUp'\n\n\nconst App: FC = () => {\n\n    // для этого приложения, конечно, не буду подключать redux\n    const [popUpOptions, setPopUpOptions] = useState<PopUpStateType>({\n        renderingComponent: null,\n        props: null\n    })\n\n    const showPopUp = (payload: { popUpOptions: PopUpStateType }): void => {\n        setPopUpOptions(payload.popUpOptions)\n    }\n\n    const closePopUp = () => setPopUpOptions({renderingComponent: null, props: null})\n\n    const onTaxDeductionClick = (): void => {\n        showPopUp({\n            popUpOptions: {\n                renderingComponent: 'taxDeduction',\n                props: {\n                    closePopUp\n                }\n            }\n        })\n    }\n\n    return (\n        <div className={styles.app}>\n            {!popUpOptions.renderingComponent &&\n            <Button\n                label='Налоговый вычет'\n                handler={onTaxDeductionClick}\n                border={true}\n            />}\n            {popUpOptions.renderingComponent &&\n            <PopUp\n                popUpOptions={popUpOptions}\n                closePopUp={closePopUp}\n            />}\n        </div>\n    )\n}\n\nexport default App\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}